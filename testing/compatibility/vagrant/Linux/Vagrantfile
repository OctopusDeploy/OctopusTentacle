# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/focal64"
  config.env.enable # Enable vagrant-env(.env)
  config.vm.network "public_network"
  config.vm.synced_folder '.', '/vagrant', disabled: true

  config.vm.box_check_update = false

  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.memory = 10240
    vb.cpus = 6
  end

  config.vm.provider :hyperv do |v, override|
    v.gui = true
    v.maxmemory = 10240
    v.memory = 10240
    v.cpus = 6
  end

  $installPowershell = <<-SCRIPT
  # Update the list of packages
  sudo apt-get update
  # Install pre-requisite packages.
  sudo apt-get install -y wget apt-transport-https software-properties-common
  # Download the Microsoft repository GPG keys
  wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
  # Register the Microsoft repository GPG keys
  sudo dpkg -i packages-microsoft-prod.deb
  # Delete the the Microsoft repository GPG keys file
  rm packages-microsoft-prod.deb
  # Update the list of packages after we added packages.microsoft.com
  sudo apt-get update
  # Install PowerShell
  sudo apt-get install -y powershell
  # Start PowerShell
  pwsh
  SCRIPT
  
  config.vm.provision "shell", inline: $installPowershell

  config.vm.provision "file", source: "./bootstrap.ps1", destination: "/tmp/bootstrap.ps1"
  config.vm.provision "file", source: "./install.ps1", destination: "/tmp/install.ps1"
  config.vm.provision "file", source: "./polling.ps1", destination: "/tmp/polling.ps1"
  config.vm.provision "file", source: "./listening.ps1", destination: "/tmp/listening.ps1"

  config.vm.provision :shell, path: "bootstrap.ps1", upload_path: "/tmp/vagrant-shell.ps1", :args => "-serverUrl " + "'" + ENV['serverUrl'] + "'" + " -serverPollingPort " + ENV['serverPollingPort'] + " -serverApiKey " + "'" + ENV['serverApiKey'] + "'" + " -environment " + "'" + ENV['environment'] + "'" + " -listeningRole " + "'" + ENV['listeningRole'] + "'" + " -pollingRole " + "'" + ENV['pollingRole'] + "'" + " -space " + "'" + ENV['space'] + "'" + " -tentacleVersions " + "'" + ENV['tentacleVersions'] + "'" + " -listening " + ENV['listening'] + " -polling " + ENV['polling'] + " -serverThumbprint " + "'" + ENV['serverThumbprint'] + "'" + " -deploymentTargets " + ENV['deploymentTargets'] + " -workers " + ENV['workers'] + " -workerPool " + "'" + ENV['workerPool'] + "'"

end
