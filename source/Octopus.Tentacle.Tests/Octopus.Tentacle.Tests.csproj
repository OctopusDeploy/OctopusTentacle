<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AssemblyName>Octopus.Tentacle.Tests</AssemblyName>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <IsPublishable>true</IsPublishable>
    <OutputPath>bin</OutputPath>
    <PublishDir>../../_build/$(AssemblyName)/$(TargetFramework)/$(RuntimeIdentifier)</PublishDir>
    <RootNamespace>Octopus.Tentacle.Tests</RootNamespace>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <LangVersion>9</LangVersion>
    <Nullable>annotations</Nullable>
  </PropertyGroup>
    
    <Choose>
        <When Condition="'$(TargetFramework)' == 'net48'">
            <PropertyGroup>
                <RuntimeIdentifiers>win</RuntimeIdentifiers><!-- This is AnyCPU -->
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <RuntimeIdentifiers>win-x86;win-x64;linux-x64;osx-x64;osx-arm64;linux-arm64;linux-arm;linux-musl-x64</RuntimeIdentifiers>
            </PropertyGroup>
        </Otherwise>
    </Choose>

  <PropertyGroup Condition="!$([MSBuild]::IsOSUnixLike())">
    <TargetFrameworks>net48;net8.0</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSUnixLike())">
    <TargetFramework>net8.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net48' ">
    <DefineConstants>$(DefineConstants);DEFAULT_PROXY_IS_AVAILABLE;HAS_SYSTEM_IDENTITYMODEL_TOKENS;FULL_FRAMEWORK</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net8.0' ">
    <DefineConstants>$(DefineConstants);DEFAULT_PROXY_IS_NOT_AVAILABLE</DefineConstants>
    <!-- Following the recommended action from https://learn.microsoft.com/en-us/dotnet/core/compatibility/sdk/6.0/duplicate-files-in-output -->
    <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.3.2" />
    <PackageReference Include="NSubstitute" Version="4.4.0" />
    <PackageReference Include="FluentAssertions" Version="6.7.0" />
    <PackageReference Include="Assent" Version="1.8.2" />
    <PackageReference Include="NUnit" Version="3.13.3" />
    <PackageReference Include="NUnit3TestAdapter" Version="4.5.0" />
    <PackageReference Include="System.ComponentModel.TypeConverter" Version="4.3.0" />
    <PackageReference Include="TeamCity.VSTest.TestAdapter" Version="1.0.36" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
    <PackageReference Include="System.DirectoryServices.AccountManagement" Version="8.0.0" />
    <PackageReference Include="System.Security.Permissions" Version="8.0.0" />
  </ItemGroup>
  <Target Name="ChangeAliasesOfStrongNameAssemblies" BeforeTargets="FindReferenceAssembliesForReferences;ResolveReferences">
    <!--
      the PackageReference doesnt support aliases, so we need to hook in later
      in the pipeline to add the alias.
      In pre 4.5.2 versions of the TaskScheduler package, it has interfaces for
      IReadOnlyCollection and IReadOnlyList, which were added in 4.5.
      As we are targeting 4.5.1, we fall back to the 4.0 package, which means
      we have a clash on those types with this dll and mscorlib
      see http://taskscheduler.codeplex.com/workitem/12473
      see https://github.com/NuGet/Home/issues/4989#issuecomment-311042085
    -->
    <ItemGroup>
      <ReferencePath Condition="'%(FileName)' == 'Microsoft.Win32.TaskScheduler'">
        <Aliases>TaskScheduler</Aliases>
      </ReferencePath>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <Content Include="Bcl\IO\*.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="Startup\Packages\**\*.exe">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'net48'">
    <Reference Include="System.DirectoryServices.AccountManagement" />
    <Reference Include="System.IdentityModel" />
    <Reference Include="System.ServiceProcess" />
  </ItemGroup>


  <ItemGroup>
    <Compile Include="..\Solution Items\SolutionInfo.cs">
      <Link>Properties\SolutionInfo.cs</Link>
    </Compile>
    <Compile Include="..\Solution Items\VersionInfo.cs">
      <Link>Properties\VersionInfo.cs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFrameworkIdentifier)' == '.NETFramework' ">
    <Reference Include="System.IdentityModel" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Resources\TestCertificateNoPassword.pfx" />
    <EmbeddedResource Include="Resources\TestCertificateNoPrivateKey.pfx" />
    <EmbeddedResource Include="Resources\TestCertificateWithPassword.pfx" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Startup\Packages\Acme.Service\Acme.Service.exe" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Octopus.Tentacle.CommonTestUtils\Octopus.Tentacle.CommonTestUtils.csproj" />
    <ProjectReference Include="..\Octopus.Tentacle.Contracts\Octopus.Tentacle.Contracts.csproj" />
    <ProjectReference Include="..\Octopus.Tentacle\Octopus.Tentacle.csproj" />
  </ItemGroup>
</Project>