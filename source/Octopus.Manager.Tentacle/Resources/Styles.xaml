<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Octopus.Manager.Tentacle.Controls"
    xmlns:shell="clr-namespace:Octopus.Manager.Tentacle.Shell"
    xmlns:converters="clr-namespace:Octopus.Manager.Tentacle.Converters">

    <Style x:Key="TextBlock.Heading" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="16pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="TextBlock.HeadingSubtle" TargetType="Run">
        <Setter Property="Foreground" Value="#999" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="TextBlock.Heading2" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="13pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="TextBlock.Big" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,5,0,5" />
    </Style>

    <Style x:Key="TextBlock.Small" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="8pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,5,0,5" />
    </Style>

    <Style x:Key="TextBlock.Subtle" BasedOn="{StaticResource TextBlock.Big}"  TargetType="TextBlock">
        <Setter Property="Foreground" Value="#4D4D4D" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style x:Key="TextBlock.Example" TargetType="Run">
        <Setter Property="Foreground" Value="#441c7f" />
        <Setter Property="Background" Value="#f4ebf9" />
    </Style>

    <Style x:Key="GroupBox.Base" TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <StackPanel Margin="10">
                            <TextBlock FontWeight="Bold" Text="{TemplateBinding Header}" Margin="0,0,0,4" Foreground="{TemplateBinding Foreground}" />
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupBox.Yellow" TargetType="GroupBox" BasedOn="{StaticResource GroupBox.Base}">
        <Setter Property="BorderBrush" Value="#FFE680" />
        <Setter Property="Background" Value="#FFE680" />
        <Setter Property="Foreground" Value="#4C4C1F" />
    </Style>

    <Style x:Key="GroupBox.Green" TargetType="GroupBox" BasedOn="{StaticResource GroupBox.Base}">
        <Setter Property="BorderBrush" Value="#99E699" />
        <Setter Property="Background" Value="#99E699" />
        <Setter Property="Foreground" Value="#2E452E" />
    </Style>

    <Style x:Key="Border.Status" TargetType="Border">
        <Setter Property="Padding" Value="10" />
    </Style>
    <Style x:Key="Border.Status.Green" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderBrush" Value="#57a856" />
        <Setter Property="Background" Value="#57a856" />
    </Style>
    <Style x:Key="Border.Status.White" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderBrush" Value="#fff" />
        <Setter Property="Background" Value="#fff" />
    </Style>
    <Style x:Key="Border.Status.Red" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderBrush" Value="#E9573F" />
        <Setter Property="Background" Value="#E9573F" />
    </Style>
    <Style x:Key="Border.Status.Yellow" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#F6BB42" />
        <Setter Property="Background" Value="#FFE5A4" />
    </Style>
    <Style x:Key="Border.Status.Gray" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#CCD1D9" />
        <Setter Property="Background" Value="#E6E9ED" />
    </Style>

    <Style x:Key="GroupBox.Red" TargetType="GroupBox" BasedOn="{StaticResource GroupBox.Base}">
        <Setter Property="BorderBrush" Value="#cd2f3b" />
        <Setter Property="Background" Value="#cd2f3b" />
        <Setter Property="Foreground" Value="#f5e6e7" />
    </Style>

    <Style TargetType="RadioButton" />

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="0,10,20,10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#E6E9ED"/>
        <Setter Property="Background" Value="#fff"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="12,22,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="4,0,0,0" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="12,22,0,2"/>
                            <Setter Property="Width" TargetName="HeaderPanel" Value="150"/>
                            <Setter Property="Padding" TargetName="ContentPanel" Value="20,16,0,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="#00608F" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#0088CC" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <BooleanToVisibilityConverter x:Key="Converter.BooleanToVisibilityConverter" />
    <converters:InverseBooleanToVisibilityConverter x:Key="Converter.InverseBooleanToVisibilityConverter" />
    <converters:InverseBooleanConverter x:Key="Converter.InverseBooleanConverter" />
    <converters:BooleanToYesNoConverter x:Key="Converter.BooleanToYesNoConverter" />
    <converters:EnumBooleanConverter x:Key="Converter.EnumBooleanConverter" />
    <converters:EnumToVisibilityConverter x:Key="Converter.EnumToVisibilityConverter" />

    <Style TargetType="controls:ErrorMessage" x:Key="ErrorMessage.Default">
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Path=HasError, Converter={StaticResource Converter.BooleanToVisibilityConverter}}" />
        <Setter Property="ViewModel" Value="{Binding}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ErrorMessage">
                    <Border Background="#E97F8A" Padding="8,4,8,4" CornerRadius="0" BorderBrush="#DA4453" BorderThickness="4,0,0,0">
                        <TextBlock TextWrapping="Wrap" Foreground="White" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Error}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ErrorMessage" BasedOn="{StaticResource ErrorMessage.Default}" />

    <Style TargetType="ToggleButton" x:Key="ComboBox.ToggleButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border                                 
                        Cursor="Hand"
                        IsHitTestVisible="True"
                        BorderThickness="2" CornerRadius="4" BorderBrush="White"
                        Background="Transparent"
                        Name="bd"
                        Focusable="False" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="bd" Value="#33ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="ComboBox.Transparent">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Margin="5,2,5,2"><TextBlock Text="{Binding Path=DisplayName}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border>
                        <Grid>
                            <ToggleButton 
                                Name="ToggleButton" 
                                Focusable="True"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                Style="{StaticResource ComboBox.ToggleButtonStyle}" />

                            <ContentControl 
                                HorizontalContentAlignment="Right"
                                HorizontalAlignment="Right"
                                Background="Transparent" Foreground="White" 
                                IsHitTestVisible="False"
                                Focusable="False"
                                            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,5,10,5" />
                            <Popup Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False">
                                <Border Background="#E6E9ED" BorderBrush="#AAB2BD" BorderThickness="2" CornerRadius="4" MinWidth="150" Margin="0,0,30,0">
                                    <ScrollViewer Margin="4,6,4,6" >
                                        <DockPanel>
                                            <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" >
                                                <StackPanel IsItemsHost="True" />

                                                <TextBlock Margin="10">
                                                    <Hyperlink Command="New">New instance...</Hyperlink>
                                                </TextBlock>
                                            </StackPanel>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageSource x:Key="ImageSource.Ok">/Resources/Images/ok.png</ImageSource>
    <ImageSource x:Key="ImageSource.OkButton_Big">/Resources/Images/ok_button.png</ImageSource>
    <ImageSource x:Key="ImageSource.NavBlueRight">/Resources/Images/nav_blue_right.png</ImageSource>
    <ImageSource x:Key="ImageSource.Warning">/Resources/Images/warning.png</ImageSource>
    <ImageSource x:Key="ImageSource.Delete">/Resources/Images/delete.png</ImageSource>
    <ImageSource x:Key="ImageSource.Alert">/Resources/Images/alert.png</ImageSource>

    <Style x:Key="TabView.Normal" TargetType="{x:Type shell:TabView}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,10,10,10"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsValid" Value="{Binding Path=IsValid}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shell:TabView}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" TextBlock.TextAlignment="Left" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Grid.Column="1" TextBlock.FontSize="9pt"  x:Name="Content" TextBlock.Foreground="#0088CC" ContentSource="Header" TextBlock.TextAlignment="Left" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

                                <controls:RetinaImage x:Name="PART_IconOk" Visibility="Collapsed" BigImage="/Resources/Images/ok@2.png" SmallImage="/Resources/Images/ok.png" Width="16" Height="16" HorizontalAlignment="Left" Grid.Column="0" />
                                <controls:RetinaImage x:Name="PART_IconError" Visibility="Collapsed" BigImage="/Resources/Images/delete@2.png" SmallImage="/Resources/Images/delete.png" Width="16" Height="16" HorizontalAlignment="Left" Grid.Column="0" />
                                <controls:RetinaImage x:Name="PART_IconNavBlueRight" Visibility="Collapsed" BigImage="/Resources/Images/button_circle_blue_right@2.png" SmallImage="/Resources/Images/button_circle_blue_right.png" Width="16" Height="16" HorizontalAlignment="Left" Grid.Column="0" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="TextBlock.FontWeight" TargetName="Content" Value="Bold"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#bcafa6"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left" />
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_IconNavBlueRight" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsPreviousTab" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_IconOk" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsValid" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_IconNavBlueRight" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_IconError" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBox.Default">
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="bd" BorderThickness="1" BorderBrush="#cccccc" CornerRadius="0" Padding="6,4,6,4" Background="{TemplateBinding Background}">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bd" Value="#52a8ec" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBox.Transparent">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="bd" BorderThickness="0" CornerRadius="0" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="PasswordBox" x:Key="PasswordBox.Default">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Name="bd" BorderThickness="1" BorderBrush="#cccccc" CornerRadius="0" Padding="6,4,6,4" Background="#ffffff">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bd" Value="#52a8ec" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource TextBox.Default}" />

    <Style TargetType="ListBox">
        <Setter Property="BorderBrush" Value="#999999" />
    </Style>

    <Style TargetType="Button" x:Key="Button.Default">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="12,7,12,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border Background="#ccd1d9" Padding="{TemplateBinding Padding}" CornerRadius="4" Name="bd">
                        <ContentPresenter HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="bd" Value="#269ecb" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#ffffff" />
                            <Setter Property="Background" TargetName="bd" Value="#aab2bd" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888" />
                            <Setter Property="BorderBrush" TargetName="bd" Value="#cccccc" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#ffffff" />
                            <Setter Property="Background" TargetName="bd" Value="#aab2bd" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="Button.Success">
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="12,7,12,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border Background="#48B350" Padding="{TemplateBinding Padding}" CornerRadius="4" Name="bd">
                        <ContentPresenter HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="bd" Value="#56b95e" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888" />
                            <Setter Property="BorderBrush" TargetName="bd" Value="#cccccc" />
                            <Setter Property="Background" TargetName="bd" Value="#f0f0f0" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="bd" Value="#56b95e" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource Button.Default}" />

    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="Foreground" Value="#000" />
    </Style>

    <Style TargetType="Border" x:Key="Border.WhiteContentBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#cccccc" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Padding" Value="20,15,20,15" />
        <Setter Property="Background" Value="#ffffff" />
    </Style>

    <Style TargetType="Border" x:Key="Border.BorderedHeader">
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="#cccccc" />
        <Setter Property="Padding" Value="0,5,0,0" />
    </Style>

    <Style TargetType="controls:RetinaImage">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RetinaImage">
                    <Image Source="{TemplateBinding Image}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ImageLink">
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ImageLink">
                    <DockPanel>
                        <controls:RetinaImage Width="16" Height="16" BigImage="{TemplateBinding BigImage}" SmallImage="{TemplateBinding SmallImage}" DockPanel.Dock="Left" />

                        <TextBlock Margin="6,0,0,0">
                            <Hyperlink Name="PART_Link">
                                <Run Text="{TemplateBinding Text}" />
                            </Hyperlink>
                        </TextBlock>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:PasswordEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PasswordEditor">
                    <Grid>
                        <TextBlock >
                            <Hyperlink Command="New">
                                <Run Text="{TemplateBinding Property=DisplayPassword}" />
                            </Hyperlink>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ControlGroup">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ControlGroup">
                    <Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="170" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Label Target="{TemplateBinding Target}" VerticalAlignment="Top" HorizontalContentAlignment="Right" Margin="0,0,10,0">
                                <TextBlock Text="{TemplateBinding Header}" TextAlignment="Right" />
                            </Label>

                            <ItemsPresenter Grid.Column="1" HorizontalAlignment="Left" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Left" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBox.Default}">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>

            <Style TargetType="{x:Type controls:ErrorMessage}" BasedOn="{StaticResource ErrorMessage.Default}">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>

            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource PasswordBox.Default}">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type RadioButton}" x:Key="RadioCardSelection">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Cursor="Hand">
                        <!--Text element-->
                        <Border Width="200" Height="230" BorderBrush="Transparent" BorderThickness="1" Name="Border" Background="White">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="3" Opacity="0.4" ShadowDepth="0"/>
                            </Border.Effect>
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <!--We don't need any bullet, cause our border is the switching element-->
                                <Viewbox Stretch="Uniform" Width="24" Height="24" Name="SelectedTick" Visibility="Collapsed" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10">
                                    <Canvas Width="128" Height="128">
                                        <Canvas.Resources/>
                                        <Canvas>
                                            <Ellipse Canvas.Left="0" Canvas.Top="0" Width="128" Height="128" Fill="#48B350"/>
                                        </Canvas>
                                        <Canvas>
                                            <Path Fill="#ffffff">
                                                <Path.Data>
                                                    <PathGeometry Figures="M54.3 97.2L24.8 67.7c-0.4-0.4-0.4-1 0-1.4l8.5-8.5c0.4-0.4 1-0.4 1.4 0L55 78.1l38.2-38.2   c0.4-0.4 1-0.4 1.4 0l8.5 8.5c0.4 0.4 0.4 1 0 1.4L55.7 97.2C55.3 97.6 54.7 97.6 54.3 97.2z" FillRule="NonZero"/>
                                                </Path.Data>
                                            </Path>
                                        </Canvas>
                                    </Canvas>
                                </Viewbox>
                                <!--<Border Margin="5,0,48,0" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />-->
                                <!-- To change the apearance to button stripe 2, edit the margins! -->
                            </Grid>

                        </Border>
                    </BulletDecorator>

                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="SelectedTick" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#48B350"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Viewbox x:Key="DeploymentTargetIcon" x:Shared="False" Stretch="Uniform">
        <Canvas Width="200" Height="200">
            <Path Fill="#0f2535">
                <Path.Data>
                    <PathGeometry Figures="M119.19 70.52h6.54a27 27 0 0 0-18-18V59a3.87 3.87 0 0 1-3.84 3.84h-7.73A3.87 3.87 0 0 1 92.32 59v-6.53a27 27 0 0 0-18 18h6.54a3.86 3.86 0 0 1 3.83 3.84V82a3.86 3.86 0 0 1-3.83 3.84h-6.59a27 27 0 0 0 18 18.05v-6.5a3.87 3.87 0 0 1 3.84-3.84h7.68a3.87 3.87 0 0 1 3.84 3.84v6.54a27 27 0 0 0 18-18.05h-6.54a3.86 3.86 0 0 1-3.73-3.88v-7.64a3.86 3.86 0 0 1 3.83-3.84z" FillRule="NonZero"/>
                </Path.Data>
            </Path>
            <Path Fill="#0f2535">
                <Path.Data>
                    <PathGeometry Figures="M170.17 16.15H29.83A3.82 3.82 0 0 0 26 20v116.71a3.82 3.82 0 0 0 3.83 3.82h65.34v15.74a14.92 14.92 0 0 0-9.3 9.3H42a4.83 4.83 0 1 0 0 9.66h43.87a14.92 14.92 0 0 0 28.26 0H158a4.83 4.83 0 1 0 0-9.66h-43.87a14.92 14.92 0 0 0-9.3-9.3v-15.74h65.34a3.82 3.82 0 0 0 3.83-3.82V20a3.82 3.82 0 0 0-3.83-3.85zM146.07 82a3.87 3.87 0 0 1-3.84 3.84h-8.58a34.59 34.59 0 0 1-26 26v8.58a3.87 3.87 0 0 1-3.84 3.84h-7.65a3.87 3.87 0 0 1-3.84-3.84v-8.58a34.59 34.59 0 0 1-26-26h-8.55A3.87 3.87 0 0 1 53.93 82v-7.64a3.87 3.87 0 0 1 3.84-3.84h8.58a34.59 34.59 0 0 1 26-26V36a3.87 3.87 0 0 1 3.84-3.84h7.68a3.87 3.87 0 0 1 3.81 3.84v8.58a34.59 34.59 0 0 1 26 26h8.58a3.87 3.87 0 0 1 3.84 3.84z" FillRule="NonZero"/>
                </Path.Data>
            </Path>
        </Canvas>
    </Viewbox>
    <Viewbox x:Key="WorkerIcon" x:Shared="False" Stretch="Uniform">
        <Canvas Width="200" Height="200">
            <Path Fill="#0f2535">
                <Path.Data>
                    <PathGeometry Figures="M170.17 16.15H29.83A3.82 3.82 0 0 0 26 20v116.71a3.82 3.82 0 0 0 3.83 3.82h65.34v15.74a14.92 14.92 0 0 0-9.3 9.3H42a4.83 4.83 0 1 0 0 9.66h43.87a14.92 14.92 0 0 0 28.26 0H158a4.83 4.83 0 1 0 0-9.66h-43.87a14.92 14.92 0 0 0-9.3-9.3v-15.74h65.34a3.82 3.82 0 0 0 3.83-3.82V20a3.82 3.82 0 0 0-3.83-3.85zm-25.15 97l-9.67 9.67a4.08 4.08 0 0 1-2.95 1.32 4.42 4.42 0 0 1-3.05-1.32L90.76 84.24a27 27 0 0 1-29.21-6.31 27.84 27.84 0 0 1-6.32-9.62 28.14 28.14 0 0 1-2-11.1A25.24 25.24 0 0 1 56 46.47L74.68 64.8 87.4 52.07 69.08 33.75a27.45 27.45 0 0 1 10.79-2.5 29.52 29.52 0 0 1 11 1.79 27.69 27.69 0 0 1 9.67 6.31 27 27 0 0 1 7.63 13.89 26.2 26.2 0 0 1-1.32 15.32l38.58 38.59a2.91 2.91 0 0 1 1.33 2.8 4.34 4.34 0 0 1-1.76 3.21z" FillRule="NonZero"/>
                </Path.Data>
            </Path>
        </Canvas>
    </Viewbox>
    <Style
        x:Key="LinkButton"
        TargetType="Button">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">
                    <TextBlock
                        TextDecorations="Underline">
                        <ContentPresenter /></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Foreground"
            Value="Blue" />
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="CreateATagTemplate">
        <TextBlock VerticalAlignment="Center" Width="Auto">"<Run Text="{Binding ElementName=Root, Path=Text}"/>" (add new <Run Text="{Binding ElementName=Root, Path=TagName}"/>)</TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="SuggestedTagTemplate">
        <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Width="Auto"/>
    </DataTemplate>

    <DataTemplate x:Key="RoleIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="24" Height="24">
                <Path Fill="#333333" Data="M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z"/>
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="EnvironmentIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="200" Height="200">
                <Path Fill="#333333" Data="M14 30v35h172V30zm26 26H23V39h17zM14 83v35h95V83zm26 26H23V92h17zM14 134v35h172v-35zm26 26H23v-17h17z"/>
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="WorkerPoolIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="200" Height="200">
                <Canvas.Resources/>
                <Path Fill="#333333" Data="M30.5 13.5v172h35v-172zm26 163h-17v-17h17zM83.5 90.5v95h35v-95zm26 86h-17v-17h17zM134.5 13.5v172h35v-172zm26 163h-17v-17h17z"/>
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="TenantIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="24" Height="24">
                <Path Fill="#333333" Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"/>
            </Canvas>
        </Viewbox>
    </DataTemplate>


</ResourceDictionary>