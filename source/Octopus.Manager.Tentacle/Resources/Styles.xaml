<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Octopus.Manager.Tentacle.Controls"
    xmlns:shell="clr-namespace:Octopus.Manager.Tentacle.Shell"
    xmlns:converters="clr-namespace:Octopus.Manager.Tentacle.Converters"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters1="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">

    <FontFamily x:Key="MaterialDesignFont">pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto</FontFamily>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="materialDesign:ValidationAssist.Background" Value="Transparent" />
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.85" />
    </Style>

    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}">
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.85" />
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.85" />
    </Style>

    <Style TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
    </Style>

    <Style x:Key="TextBlock.Heading" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="16pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="TextBlock.HeadingSubtle" TargetType="Run">
        <Setter Property="Foreground" Value="#9e9e9e" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="TextBlock.Heading2" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="13pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="TextBlock.Big" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,5,0,5" />
    </Style>

    <Style x:Key="TextBlock.Small" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="8pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,5,0,5" />
    </Style>

    <Style x:Key="TextBlock.Subtle" BasedOn="{StaticResource TextBlock.Big}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#333333" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style x:Key="TextBlock.Example" TargetType="Run">
        <Setter Property="Foreground" Value="#441c7f" />
        <Setter Property="Background" Value="#f4ebf9" />
    </Style>

    <Style x:Key="CopyToClipboardButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox Stretch="Uniform">
                    <Canvas Width="24" Height="24">
                        <Path Fill="#333333">
                            <Path.Data>
                                <PathGeometry
                                    Figures="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"
                                    FillRule="NonZero" />
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomMaterialDesignComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="ToggleTemplateRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border x:Name="splitBorder"
                                    Margin="0,0,20,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    BorderBrush="Transparent"
                                    BorderThickness="0">
                                <Path x:Name="arrow"
                                      Width="8" Height="8"
                                      Margin="0"
                                      Stretch="Uniform"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Data="M7,10L12,15L17,10H7Z"
                                      Fill="#ffffff" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="arrow" Property="Fill"
                                    Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ToggleTemplateRoot" Property="BorderBrush" Value="Transparent" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ToggleTemplateRoot" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="splitBorder" Property="BorderBrush"
                                    Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CustomPopupContentClassicTemplate" TargetType="ContentControl">
        <Grid
            MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth, Converter={StaticResource MathAddConverter}, ConverterParameter=32}"
            Margin="6">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border Background="Transparent"
                    BorderBrush="{DynamicResource MaterialDesignShadowBrush}"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border.Effect>
                    <BlurEffect Radius="6" />
                </Border.Effect>
            </Border>
            <Grid Margin="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        CornerRadius="2 2 0 0"
                        Background="#ffffff"
                        Height="{StaticResource PopupTopBottomMargin}" />

                <ContentPresenter Grid.Row="1" />
                <Grid Grid.Row="2" Background="White">
                    <TextBlock Margin="15 10">
                        <Hyperlink Command="New">New Tentacle...</Hyperlink>
                    </TextBlock>
                </Grid>
                <Border Grid.Row="3"
                        CornerRadius="0 0 2 2"
                        Height="2"
                        Background="#ffffff" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomMaterialDesignFloatingHintComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              Background="{TemplateBinding Background}"
              SnapsToDevicePixels="True">
            <Grid x:Name="InnerRoot">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0"
                                      MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="toggleButton"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource CustomMaterialDesignComboBoxToggleButton}" />
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Margin="{TemplateBinding Padding}"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                    <Grid x:Name="InputRoot"
                          HorizontalAlignment="Left">
                        <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                 HorizontalAlignment="Left"
                                 HorizontalContentAlignment="Stretch"
                                 Style="{StaticResource MaterialDesignComboBoxEditableTextBox}"
                                 CaretBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"
                                 Visibility="Collapsed" />

                        <materialDesign:SmartHint x:Name="Hint"
                                                  HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters1:HintProxyFabricConverter.Instance}}"
                                                  FontSize="{TemplateBinding FontSize}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                  UseFloating="{Binding Path=(materialDesign:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}"
                                                  FloatingScale="{Binding Path=(materialDesign:HintAssist.FloatingScale), RelativeSource={RelativeSource TemplatedParent}}"
                                                  FloatingOffset="{Binding Path=(materialDesign:HintAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}"
                                                  HintOpacity="{Binding Path=(materialDesign:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                                  Hint="{TemplateBinding materialDesign:HintAssist.Hint}" />
                    </Grid>
                </Grid>
                <Line x:Name="DashedLine" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                      Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource InverseBoolToVisConverter}}"
                      StrokeThickness="1.25" StrokeDashArray="1,2.5" StrokeDashCap="Round"
                      X1="0" X2="{Binding ActualWidth, ElementName=toggleButton}" Y1="0" Y2="0"
                      Stroke="{TemplateBinding BorderBrush}" Opacity="0.56" />

                <materialDesign:ComboBoxPopup x:Name="PART_Popup"
                                              AllowsTransparency="true"
                                              Focusable="False"
                                              HorizontalOffset="-11.5"
                                              IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              PlacementTarget="{Binding ElementName=templateRoot}"
                                              SnapsToDevicePixels="True"
                                              UseLayoutRounding="True"
                                              Placement="Custom"
                                              PopupAnimation="Fade"
                                              VerticalOffset="0"
                                              DefaultVerticalOffset="0"
                                              DownVerticalOffset="0"
                                              UpVerticalOffset="15"
                                              ClassicMode="{Binding Path=(materialDesign:ComboBoxAssist.ClassicMode), RelativeSource={RelativeSource TemplatedParent}}"
                                              UpContentTemplate="{StaticResource PopupContentUpTemplate}"
                                              DownContentTemplate="{StaticResource PopupContentDownTemplate}"
                                              ClassicContentTemplate="{StaticResource CustomPopupContentClassicTemplate}">
                    <ContentControl>
                        <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      Background="#ffffff" Foreground="#333333">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </ContentControl>
                </materialDesign:ComboBoxPopup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="PopupPlacement"
                     Value="{x:Static materialDesign:ComboBoxPopupPlacement.Classic}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignComboBoxItemStyle}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="Background" TargetName="templateRoot"
                        Value="{Binding Background, ElementName=PART_Popup}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                <Setter TargetName="toggleButton" Property="BorderBrush" Value="#ffffff" />
            </Trigger>
            <Trigger Property="IsEditable" Value="True">
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="materialDesign:HintAssist.IsFloating" Value="True">
                <Setter TargetName="InnerRoot" Property="Margin" Value="0 11.5 0 0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="False" />
                    <Condition Property="IsDropDownOpen" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="toggleButton" Property="BorderBrush" Value="#ffffff" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                    <Condition Property="materialDesign:HintAssist.IsFloating" Value="True" />
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="materialDesign:HintAssist.IsFloating" Value="True" />
                    <Condition SourceName="Hint" Property="IsHintInFloatingPosition" Value="True" />
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                    <Condition SourceName="PART_EditableTextBox" Property="IsKeyboardFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="Hint" Property="IsContentNullOrEmpty" Value="False" />
                    <Condition Property="IsDropDownOpen" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Hint" Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="IsKeyboardFocused" Value="true" />
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="Validation.HasError" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource ValidationErrorBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="Validation.HasError" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomMaterialDesignComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#ffffff" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="BorderThickness" Value="0 0 0 0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="0 6 0 6" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="1 0 1 0" />
        <Setter Property="Template" Value="{StaticResource CustomMaterialDesignFloatingHintComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#1AFFFFFF" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <!-- designer prefers hard bool -->
                <Setter Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="{StaticResource TrueValue}" />
            </Trigger>
            <!-- designer prefers hard bool -->
            <Trigger Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="{StaticResource TrueValue}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignComboBoxItemStyle}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GroupBox.Base" TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <StackPanel Margin="10">
                            <TextBlock FontWeight="Bold" Text="{TemplateBinding Header}" Margin="0,0,0,4"
                                       Foreground="{TemplateBinding Foreground}" />
                            <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupBox.Yellow" TargetType="GroupBox" BasedOn="{StaticResource GroupBox.Base}">
        <Setter Property="BorderBrush" Value="#FFE680" />
        <Setter Property="Background" Value="#FFE680" />
        <Setter Property="Foreground" Value="#4C4C1F" />
    </Style>

    <Style x:Key="GroupBox.Green" TargetType="GroupBox" BasedOn="{StaticResource GroupBox.Base}">
        <Setter Property="BorderBrush" Value="#99E699" />
        <Setter Property="Background" Value="#99E699" />
        <Setter Property="Foreground" Value="#2E452E" />
    </Style>

    <Style x:Key="Border.Status" TargetType="Border">
        <Setter Property="Padding" Value="10" />
    </Style>
    <Style x:Key="Border.Status.Green" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderBrush" Value="#48B350" />
        <Setter Property="Background" Value="#48B350" />
    </Style>
    <Style x:Key="Border.Status.White" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderBrush" Value="#fff" />
        <Setter Property="Background" Value="#fff" />
    </Style>
    <Style x:Key="Border.Status.Red" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderBrush" Value="#db4437" />
        <Setter Property="Background" Value="#1Adb4437" />
    </Style>
    <Style x:Key="Border.Status.Yellow" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#fb8c00" />
        <Setter Property="Background" Value="#fb8c00" />
    </Style>
    <Style x:Key="Border.Status.Gray" TargetType="Border" BasedOn="{StaticResource Border.Status}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="#CCD1D9" />
        <Setter Property="Background" Value="#E6E9ED" />
    </Style>

    <Style x:Key="GroupBox.Red" TargetType="GroupBox" BasedOn="{StaticResource GroupBox.Base}">
        <Setter Property="BorderBrush" Value="#cd2f3b" />
        <Setter Property="Background" Value="#cd2f3b" />
        <Setter Property="Foreground" Value="#f5e6e7" />
    </Style>

    <Style TargetType="RadioButton" />

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="0,10,20,10" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#E6E9ED" />
        <Setter Property="Background" Value="#fff" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="12,22,2,0"
                                  Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border x:Name="ContentPanel" Background="{TemplateBinding Background}" Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="12,22,0,2" />
                            <Setter Property="Width" TargetName="HeaderPanel" Value="150" />
                            <Setter Property="Padding" TargetName="ContentPanel" Value="20,16,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="#2f93e0" />
        <Setter Property="IsEnabled"
                Value="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type FrameworkElement}}}" />
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#0A67B1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <BooleanToVisibilityConverter x:Key="Converter.BooleanToVisibilityConverter" />
    <converters:InverseBooleanToVisibilityConverter x:Key="Converter.InverseBooleanToVisibilityConverter" />
    <converters:InverseBooleanConverter x:Key="Converter.InverseBooleanConverter" />
    <converters:BooleanToYesNoConverter x:Key="Converter.BooleanToYesNoConverter" />
    <converters:EnumBooleanConverter x:Key="Converter.EnumBooleanConverter" />
    <converters:EnumToVisibilityConverter x:Key="Converter.EnumToVisibilityConverter" />
    <converters:StringToVisibilityConverter x:Key="Converter.StringToVisibilityConverter" />
    <converters:StringEmptyConverter x:Key="Converter.StringEmptyConverter" />
    <converters:CapitalizeFirstLetterConverter x:Key="Converter.CapitalizeFirstLetterConverter" />

    <Style TargetType="controls:ErrorMessage" x:Key="ErrorMessage.Default">
        <Setter Property="Visibility"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=HasError, Converter={StaticResource Converter.BooleanToVisibilityConverter}}" />
        <Setter Property="ViewModel" Value="{Binding}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ErrorMessage">
                    <Border Background="Transparent" Margin="0,0,0,2" CornerRadius="0" BorderBrush="Transparent"
                            BorderThickness="0,0,0,0">
                        <TextBlock TextWrapping="Wrap" Foreground="#FFF44336" FontSize="10"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Error}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ErrorMessage" BasedOn="{StaticResource ErrorMessage.Default}" />

    <Style TargetType="ToggleButton" x:Key="ComboBox.ToggleButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Cursor="Hand"
                        IsHitTestVisible="True"
                        BorderThickness="0,0,0,0" CornerRadius="0" BorderBrush="White"
                        Background="Transparent"
                        Name="bd"
                        Focusable="False" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="bd" Value="#33ffffff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="ComboBox.Transparent">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Margin="5,2,5,2">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock HorizontalAlignment="Left" Text="{Binding Path=DisplayName}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border>
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Focusable="True"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                Style="{StaticResource ComboBox.ToggleButtonStyle}" />
                            <Path Margin="5,0,10,0" Fill="#ffffff" Data="M 1 1 L 6 6 L 11 1 Z"
                                  HorizontalAlignment="Right" VerticalAlignment="Center" />
                            <ContentControl
                                HorizontalContentAlignment="Right"
                                HorizontalAlignment="Right"
                                Background="Transparent" Foreground="White"
                                IsHitTestVisible="False"
                                Focusable="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="5,5,20,5" />
                            <Popup Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" Focusable="False">
                                <Border Background="#fff" BorderThickness="0" CornerRadius="0" MinWidth="150"
                                        Margin="6">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" Direction="320" ShadowDepth="1" BlurRadius="5"
                                                          Opacity="0.5" />
                                    </Border.Effect>
                                    <ScrollViewer Margin="4,6,4,6">
                                        <DockPanel>
                                            <StackPanel KeyboardNavigation.DirectionalNavigation="Contained">
                                                <StackPanel IsItemsHost="True" />

                                                <TextBlock Margin="10">
                                                    <Hyperlink Command="New">New instance...</Hyperlink>
                                                </TextBlock>
                                            </StackPanel>
                                        </DockPanel>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ImageSource x:Key="ImageSource.Ok">/Resources/Images/ok.png</ImageSource>
    <ImageSource x:Key="ImageSource.OkButton_Big">/Resources/Images/ok_button.png</ImageSource>
    <ImageSource x:Key="ImageSource.NavBlueRight">/Resources/Images/nav_blue_right.png</ImageSource>
    <ImageSource x:Key="ImageSource.Warning">/Resources/Images/warning.png</ImageSource>
    <ImageSource x:Key="ImageSource.Delete">/Resources/Images/delete.png</ImageSource>
    <ImageSource x:Key="ImageSource.Alert">/Resources/Images/alert.png</ImageSource>

    <Style x:Key="TabView.Normal" TargetType="{x:Type shell:TabView}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="10,10,10,10" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsValid" Value="{Binding Path=IsValid}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shell:TabView}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" TextBlock.TextAlignment="Left"
                                BorderThickness="1,1,1,0" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Grid.Column="1" TextBlock.FontSize="9pt" x:Name="Content"
                                                  TextBlock.Foreground="#666666" ContentSource="Header"
                                                  TextBlock.TextAlignment="Left" HorizontalAlignment="Left"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

                                <controls:RetinaImage x:Name="PART_IconOk" Visibility="Collapsed"
                                                      BigImage="/Resources/Images/ok@2x.png"
                                                      SmallImage="/Resources/Images/ok.png" Width="16" Height="16"
                                                      HorizontalAlignment="Left" Grid.Column="0" />
                                <controls:RetinaImage x:Name="PART_IconError" Visibility="Collapsed"
                                                      BigImage="/Resources/Images/delete@2x.png"
                                                      SmallImage="/Resources/Images/delete.png" Width="16" Height="16"
                                                      HorizontalAlignment="Left" Grid.Column="0" />
                                <controls:RetinaImage x:Name="PART_IconNavBlueRight" Visibility="Collapsed"
                                                      BigImage="/Resources/Images/button_circle_blue_right@2x.png"
                                                      SmallImage="/Resources/Images/button_circle_blue_right.png"
                                                      Width="16" Height="16" HorizontalAlignment="Left" Grid.Column="0" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="TextBlock.FontWeight" TargetName="Content" Value="Bold" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#bcafa6" />
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left" />
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2" />
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_IconNavBlueRight" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsPreviousTab" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_IconOk" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsValid" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_IconNavBlueRight" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_IconError" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBox.Default">
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="bd" BorderThickness="1" BorderBrush="#cccccc" CornerRadius="0" Padding="6,4,6,4"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bd" Value="#52a8ec" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBox.Transparent">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="bd" BorderThickness="0" CornerRadius="0" Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="PasswordBox" x:Key="PasswordBox.Default">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Name="bd" BorderThickness="1" BorderBrush="#cccccc" CornerRadius="0" Padding="6,4,6,4"
                            Background="#ffffff">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bd" Value="#52a8ec" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="Button.Default">
        <Setter Property="Foreground" Value="#2e93e0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="12,7,12,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border Background="#ffffff" Padding="{TemplateBinding Padding}" CornerRadius="2" Name="bd">
                        <ContentPresenter HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="bd" Value="#269ecb" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#2e93e0" />
                            <Setter Property="Background" TargetName="bd" Value="#ebebeb" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ffffff" />
                            <Setter Property="Background" TargetName="bd" Value="#c5c5c5" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#2e93e0" />
                            <Setter Property="Background" TargetName="bd" Value="#d3d3d3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="Button.Success">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="1" BlurRadius="5" Opacity="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="12,7,12,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border Background="#48B350" Padding="{TemplateBinding Padding}" CornerRadius="2" Name="bd">
                        <ContentPresenter HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="bd" Value="#56b95e" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Effect" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="#ffffff" />
                            <Setter Property="Background" TargetName="bd" Value="#c5c5c5" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="bd" Value="#56b95e" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource Button.Default}" />

    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="Foreground" Value="#000" />
    </Style>

    <Style TargetType="Border" x:Key="Border.WhiteContentBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#cccccc" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Padding" Value="20,15,20,15" />
        <Setter Property="Background" Value="#ffffff" />
    </Style>

    <Style TargetType="Border" x:Key="Border.BorderedHeader">
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="#cccccc" />
        <Setter Property="Padding" Value="0,5,0,0" />
    </Style>

    <Style TargetType="controls:RetinaImage">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RetinaImage">
                    <Image Source="{TemplateBinding Image}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ImageLink">
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ImageLink">
                    <DockPanel>
                        <controls:RetinaImage Width="16" Height="16" BigImage="{TemplateBinding BigImage}"
                                              SmallImage="{TemplateBinding SmallImage}" DockPanel.Dock="Left" />

                        <TextBlock Margin="6,0,0,0">
                            <Hyperlink Name="PART_Link">
                                <Run Text="{TemplateBinding Text}" />
                            </Hyperlink>
                        </TextBlock>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:PasswordEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PasswordEditor">
                    <Grid>
                        <TextBlock>
                            <Hyperlink Command="New">
                                <Run Text="{TemplateBinding Property=DisplayPassword}" />
                            </Hyperlink>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ControlGroup">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ControlGroup">
                    <Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="170" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Label Target="{TemplateBinding Target}" VerticalAlignment="Top"
                                   HorizontalContentAlignment="Right" Margin="0,0,10,0">
                                <TextBlock Text="{TemplateBinding Header}" FontWeight="Bold" TextAlignment="Right" />
                            </Label>

                            <ItemsPresenter Grid.Column="1" HorizontalAlignment="Left" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Left" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBox.Default}">
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style TargetType="{x:Type controls:ErrorMessage}" BasedOn="{StaticResource ErrorMessage.Default}">
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource PasswordBox.Default}">
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type RadioButton}" x:Key="RadioCardSelection">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <!--Text element-->
                    <Grid Width="280" Height="180">
                        <Border BorderBrush="Transparent" BorderThickness="1" Name="Border" Background="White">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="3" Opacity="0.4" ShadowDepth="0" />
                            </Border.Effect>
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <!--We don't need any bullet, cause our border is the switching element-->
                                <Viewbox Stretch="Uniform" Width="24" Height="24" Name="SelectedTick"
                                         Visibility="Collapsed" VerticalAlignment="Top" HorizontalAlignment="Right"
                                         Margin="10">
                                    <Canvas Width="128" Height="128">
                                        <Canvas.Resources />
                                        <Canvas>
                                            <Ellipse Canvas.Left="0" Canvas.Top="0" Width="128" Height="128"
                                                     Fill="#48B350" />
                                        </Canvas>
                                        <Canvas>
                                            <Path Fill="#ffffff">
                                                <Path.Data>
                                                    <PathGeometry
                                                        Figures="M54.3 97.2L24.8 67.7c-0.4-0.4-0.4-1 0-1.4l8.5-8.5c0.4-0.4 1-0.4 1.4 0L55 78.1l38.2-38.2   c0.4-0.4 1-0.4 1.4 0l8.5 8.5c0.4 0.4 0.4 1 0 1.4L55.7 97.2C55.3 97.6 54.7 97.6 54.3 97.2z"
                                                        FillRule="NonZero" />
                                                </Path.Data>
                                            </Path>
                                        </Canvas>
                                    </Canvas>
                                </Viewbox>
                                <!--<Border Margin="5,0,48,0" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />-->
                                <!-- To change the apearance to button stripe 2, edit the margins! -->
                            </Grid>
                        </Border>
                        <Border Name="DisabledBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Visibility="Collapsed" Background="#cccccc" Opacity="0.3" />
                        <Border Name="HoverBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Visibility="Collapsed" Background="Transparent">
                            <Grid Cursor="Hand">
                                <Border Background="#9e9e9e" Opacity="0.4" />
                                <Border Background="#fff" Opacity="0.5" />
                                <BulletDecorator Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Button IsHitTestVisible="False" Style="{StaticResource Button.Success}"
                                            Content="SELECT" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </BulletDecorator>
                            </Grid>
                        </Border>
                    </Grid>
                    <!--If item is checked, trigger the visibility of the mark-->
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsChecked" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HoverBorder" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="3" Opacity="0.7" ShadowDepth="1" />
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="SelectedTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#48B350" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Effect" Value="{x:Null}" />
                            <Setter TargetName="DisabledBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Viewbox x:Key="PollingTentacleIcon" x:Shared="False" Stretch="Uniform">
        <Canvas Width="170" Height="80">
            <Path Data="F1 M 74.88,31.36 L 113.92,31.36 M 83.36,25.44 L 74.4,31.36 83.36,37.44" Stroke="#ff1b2e3f"
                  StrokeThickness="1.92" StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
            <Path Data="F1 M 122.4,68 L 155.04,68" Stroke="#ff1b2e3f" StrokeThickness="2.72" StrokeLineJoin="Miter"
                  StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="4" />
            <Path
                Data="F1 M 0,0 C 0,3.04 -2.4,5.44 -5.44,5.44 -8.32,5.44 -10.88,3.04 -10.88,0
		 -10.88,-3.04 -8.32,-5.44 -5.44,-5.44 -2.4,-5.44 0,-3.04 0,0 z"
                RenderTransform="1,0,0,1,144.16,68" Fill="#ff1b2e3f" />
            <Path Data="F1 M 138.72,54.4 L 138.72,68" Stroke="#ff1b2e3f" StrokeThickness="2.72" StrokeLineJoin="Miter"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeMiterLimit="4" />
            <Path
                Data="F1 M 0,0 L 46.08,0 C 47.68,0 48.8,1.28 48.8,2.72 L 48.8,40.8 C 48.8,42.24 47.68,43.52 46.08,43.52
		L 0,43.52 C -1.6,43.52 -2.72,42.24 -2.72,40.8 L -2.72,2.72 C -2.72,1.28 -1.6,0 0,0 z"
                RenderTransform="1,0,0,1,114.4,10.88" Fill="#ff1b2e3f" />
            <Path Data="F1 M 64.96,31.48 L 40.56,31.48" Stroke="#ff2f93e0" StrokeThickness="1.92" />
            <Path Name="path30" Fill="#2f93e0">
                <Path.Data>
                    <PathGeometry Figures="m65.24 35.26a3.76 3.76 0 1 0-3.76-3.76 3.76 3.76 0 0 0 3.76 3.76z"
                                  FillRule="NonZero" />
                </Path.Data>
            </Path>
            <Canvas>
                <Path Name="path24" Fill="#FFFFFF">
                    <Path.Data>
                        <PathGeometry
                            Figures="M153.69 23.77a1.47 1.47 0 0 1-1 .34 2.81 2.81 0 0 1-1.94-.94c-.94-1-1.1-2.16-.38-2.79a1.47 1.47 0 0 1 1-.34 2.88 2.88 0 0 1 1.95.93 2.94 2.94 0 0 1 .77 1.36 1.42 1.42 0 0 1-.4 1.44m-4.36-4.48c-.06.22-.32.73-1.39.73a3.83 3.83 0 0 1-.93-.12c-1.19-.29-1.9-.95-1.72-1.6.06-.22.31-.73 1.39-.73a3.89 3.89 0 0 1 .93.12c1.19.29 1.9.95 1.72 1.6m-7.19.61a2.7 2.7 0 0 1-1.08.26.92.92 0 0 1-.89-.45c-.27-.53.15-1.17 1.06-1.58a2.66 2.66 0 0 1 1.08-.26.91.91 0 0 1 .89.45c.27.53-.16 1.16-1.06 1.58m-4 18.12a2.68 2.68 0 0 1-.62.07c-.66 0-1.11-.25-1.21-.68a.83.83 0 0 1 .47-.91 2.65 2.65 0 0 1 .92-.37 3.34 3.34 0 0 1 .62-.06c.66 0 1.12.25 1.21.67s-.42 1.08-1.39 1.28m-5.17-1.88c-.08.53-.7.85-1.66.85h-.47a2.57 2.57 0 0 1-1.67-.68.76.76 0 0 1-.19-.6c.08-.53.7-.85 1.66-.85h.48a2.6 2.6 0 0 1 1.67.68.76.76 0 0 1 .18.6m-8-2.78a1.1 1.1 0 0 1-1 .5 3.62 3.62 0 0 1-1.58-.43c-1.19-.59-1.77-1.45-1.41-2.08a1.07 1.07 0 0 1 1-.5 3.73 3.73 0 0 1 1.58.42c1.19.6 1.77 1.45 1.42 2.09m-7.6-3.7a1.08 1.08 0 0 1-.82.32 3.77 3.77 0 0 1-2.2-1c-1.38-1.2-1.49-2.28-1-2.77a1.07 1.07 0 0 1 .82-.32 3.72 3.72 0 0 1 2.19 1c1.39 1.2 1.5 2.28 1 2.77m40-4.47c-5.7-14.72-23-8.11-25.49-.25-1.43 4.45 2.12 3.68 5.27 1.48 5.39-3.74 11.66-2.49 10.71 3.08-1 6-9.57 6.22-18.4 2.84a54.77 54.77 0 0 1-17.69-11V41s21.53 11.51 38.28.85c5.08-3.23 9.59-10.75 7.32-16.61"
                            FillRule="NonZero" />
                    </Path.Data>
                </Path>
            </Canvas>
            <Ellipse Canvas.Left="6" Canvas.Top="9.5" Width="44" Height="44" Name="circle32" Fill="#2f93e0" />
            <Path Name="path34" Fill="#FFFFFF">
                <Path.Data>
                    <PathGeometry
                        Figures="M15.87 38.87c2.14-1.38 4.66-3.75 3.71-6.54a16.28 16.28 0 0 1-1.34-4.46 10 10 0 0 1 .61-4.09 10.36 10.36 0 0 1 12.8-6.05c4.78 1.44 8.07 7 6.09 11.83-1.14 2.79-1.66 4.95.9 7.12.69.59 2.37 1.47 2.36 2.52 0 1.37-2.69-.29-3-.53.34.6 3.72 4.12 1.57 4.37-2 .23-3.73-2.53-4.92-3.72-2-2-1.66 2.42-1.67 3.33 0 1.44-1 4.36-2.85 2.46-1.51-1.57-.94-4.07-2-5.82-1.13-1.91-3.04 1.91-3.52 2.61s-3.2 4.56-4.26 2.55c-.87-1.64.51-4.2 1.19-5.68-.25.54-2 1.33-2.51 1.59a6.87 6.87 0 0 1-3.63.84c-2.69-.2-.62-1.62.47-2.33z"
                        FillRule="NonZero" />
                </Path.Data>
            </Path>
        </Canvas>
    </Viewbox>
    <Viewbox x:Key="ListeningTentacleIcon" x:Shared="False" Stretch="Uniform">
        <Canvas Name="Layer_1" Width="170" Height="80">
            <Path Data="F1 M 124.96,36.48 L 94.56,36.48" Stroke="#ff2f93e0" StrokeThickness="1.92" />
            <Path
                Data="F1 M 0,0 C -1.6,0 -2.88,0.96 -3.52,2.4 -4.16,3.68 -3.84,5.44 -2.72,6.4
		 -1.6,7.52 0,7.84 1.44,7.2 2.88,6.72 3.68,5.28 3.68,3.84 3.68,1.76 2.08,0 0,0 z"
                RenderTransform="1,0,0,1,94.72,32.64" Fill="#ff2f93e0" />
            <Path
                Data="F1 M 0,0 C 0,12.16 -9.76,21.92 -21.92,21.92 -34.08,21.92 -44,12.16 -44,0
		 -44,-12.16 -34.08,-22.08 -21.92,-22.08 -9.76,-22.08 0,-12.16 0,0 z"
                RenderTransform="1,0,0,1,50.88,36.48" Fill="#ff1b2e3f" />
            <Path
                Data="F1 M 0,0 C 2.08,-1.44 4.64,-3.84 3.68,-6.56 3.04,-8 2.56,-9.44 2.4,-11.04
		 2.24,-12.48 2.56,-13.76 3.04,-15.2 4.96,-20.16 10.56,-22.88 15.84,-21.12 20.48,-19.68 23.84,-14.24 21.92,-9.28
		 20.8,-6.56 20.16,-4.48 22.72,-2.24 23.52,-1.6 25.12,-0.8 25.12,0.32 25.12,1.6 22.4,0 22.08,-0.32
		 22.4,0.32 25.92,3.84 23.68,4.16 21.76,4.32 20,1.6 18.72,0.48 16.8,-1.6 17.12,2.88 17.12,3.68
		 17.12,5.12 16.16,8.16 14.24,6.24 12.8,4.64 13.28,2.08 12.32,0.32 11.2,-1.6 9.28,2.24 8.8,3.04
		 8.32,3.68 5.6,7.52 4.48,5.6 3.68,3.84 4.96,1.28 5.6,-0.16 5.44,0.32 3.68,1.12 3.2,1.44
		 2.08,2.08 0.8,2.4 -0.48,2.24 -3.2,2.08 -1.12,0.64 0,0 z"
                RenderTransform="1,0,0,1,16.8,43.84" Fill="#ffffffff" />
            <Path Data="F1 M 76,30.4 L 84.96,36.48 76,42.4" Stroke="#ff1b2e3f" StrokeThickness="1.92"
                  StrokeLineJoin="Round" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
            <Path Data="F1 M 44,36.48 L 82.88,36.48" Stroke="#ff1b2e3f" StrokeThickness="1.92" />
            <Path Data="F1 M 122.4,68 L 155.04,68" Stroke="#ff1b2e3f" StrokeThickness="2.72" StrokeLineJoin="Miter"
                  StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="4" />
            <Path
                Data="F1 M 0,0 C 0,3.04 -2.4,5.44 -5.44,5.44 -8.32,5.44 -10.88,3.04 -10.88,0
		 -10.88,-3.04 -8.32,-5.44 -5.44,-5.44 -2.4,-5.44 0,-3.04 0,0 z"
                RenderTransform="1,0,0,1,144.16,68" Fill="#ff1b2e3f" />
            <Path Data="F1 M 138.72,54.4 L 138.72,68" Stroke="#ff1b2e3f" StrokeThickness="2.72" StrokeLineJoin="Miter"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeMiterLimit="4" />
            <Path
                Data="F1 M 0,0 L 46.08,0 C 47.68,0 48.8,1.28 48.8,2.72 L 48.8,40.8 C 48.8,42.24 47.68,43.52 46.08,43.52
		L 0,43.52 C -1.6,43.52 -2.72,42.24 -2.72,40.8 L -2.72,2.72 C -2.72,1.28 -1.6,0 0,0 z"
                RenderTransform="1,0,0,1,114.4,10.88" Fill="#ff2f93e0" />
            <Canvas>
                <Path Name="Fill1" Fill="#FFFFFF"
                      Data="M153.69 23.77a1.47 1.47 0 0 1-1 .34 2.81 2.81 0 0 1-1.94-.94c-.94-1-1.1-2.16-.38-2.79a1.47 1.47 0 0 1 1-.34 2.88 2.88 0 0 1 1.95.93 2.94 2.94 0 0 1 .77 1.36 1.42 1.42 0 0 1-.4 1.44m-4.36-4.48c-.06.22-.32.73-1.39.73a3.83 3.83 0 0 1-.93-.12c-1.19-.29-1.9-.95-1.72-1.6.06-.22.31-.73 1.39-.73a3.89 3.89 0 0 1 .93.12c1.19.29 1.9.95 1.72 1.6m-7.19.61a2.7 2.7 0 0 1-1.08.26.92.92 0 0 1-.89-.45c-.27-.53.15-1.17 1.06-1.58a2.66 2.66 0 0 1 1.08-.26.91.91 0 0 1 .89.45c.27.53-.16 1.16-1.06 1.58m-4 18.12a2.68 2.68 0 0 1-.62.07c-.66 0-1.11-.25-1.21-.68a.83.83 0 0 1 .47-.91 2.65 2.65 0 0 1 .92-.37 3.34 3.34 0 0 1 .62-.06c.66 0 1.12.25 1.21.67s-.42 1.08-1.39 1.28m-5.17-1.88c-.08.53-.7.85-1.66.85h-.47a2.57 2.57 0 0 1-1.67-.68.76.76 0 0 1-.19-.6c.08-.53.7-.85 1.66-.85h.48a2.6 2.6 0 0 1 1.67.68.76.76 0 0 1 .18.6m-8-2.78a1.1 1.1 0 0 1-1 .5 3.62 3.62 0 0 1-1.58-.43c-1.19-.59-1.77-1.45-1.41-2.08a1.07 1.07 0 0 1 1-.5 3.73 3.73 0 0 1 1.58.42c1.19.6 1.77 1.45 1.42 2.09m-7.6-3.7a1.08 1.08 0 0 1-.82.32 3.77 3.77 0 0 1-2.2-1c-1.38-1.2-1.49-2.28-1-2.77a1.07 1.07 0 0 1 .82-.32 3.72 3.72 0 0 1 2.19 1c1.39 1.2 1.5 2.28 1 2.77m40-4.47c-5.7-14.72-23-8.11-25.49-.25-1.43 4.45 2.12 3.68 5.27 1.48 5.39-3.74 11.66-2.49 10.71 3.08-1 6-9.57 6.22-18.4 2.84a54.77 54.77 0 0 1-17.69-11V41s21.53 11.51 38.28.85c5.08-3.23 9.59-10.75 7.32-16.61" />
            </Canvas>
        </Canvas>
    </Viewbox>
    <Viewbox x:Key="DeploymentTargetIcon" x:Shared="False" Stretch="Uniform">
        <Canvas Width="200" Height="200">
            <Path Fill="#0f2535">
                <Path.Data>
                    <PathGeometry
                        Figures="M119.19 70.52h6.54a27 27 0 0 0-18-18V59a3.87 3.87 0 0 1-3.84 3.84h-7.73A3.87 3.87 0 0 1 92.32 59v-6.53a27 27 0 0 0-18 18h6.54a3.86 3.86 0 0 1 3.83 3.84V82a3.86 3.86 0 0 1-3.83 3.84h-6.59a27 27 0 0 0 18 18.05v-6.5a3.87 3.87 0 0 1 3.84-3.84h7.68a3.87 3.87 0 0 1 3.84 3.84v6.54a27 27 0 0 0 18-18.05h-6.54a3.86 3.86 0 0 1-3.73-3.88v-7.64a3.86 3.86 0 0 1 3.83-3.84z"
                        FillRule="NonZero" />
                </Path.Data>
            </Path>
            <Path Fill="#0f2535">
                <Path.Data>
                    <PathGeometry
                        Figures="M170.17 16.15H29.83A3.82 3.82 0 0 0 26 20v116.71a3.82 3.82 0 0 0 3.83 3.82h65.34v15.74a14.92 14.92 0 0 0-9.3 9.3H42a4.83 4.83 0 1 0 0 9.66h43.87a14.92 14.92 0 0 0 28.26 0H158a4.83 4.83 0 1 0 0-9.66h-43.87a14.92 14.92 0 0 0-9.3-9.3v-15.74h65.34a3.82 3.82 0 0 0 3.83-3.82V20a3.82 3.82 0 0 0-3.83-3.85zM146.07 82a3.87 3.87 0 0 1-3.84 3.84h-8.58a34.59 34.59 0 0 1-26 26v8.58a3.87 3.87 0 0 1-3.84 3.84h-7.65a3.87 3.87 0 0 1-3.84-3.84v-8.58a34.59 34.59 0 0 1-26-26h-8.55A3.87 3.87 0 0 1 53.93 82v-7.64a3.87 3.87 0 0 1 3.84-3.84h8.58a34.59 34.59 0 0 1 26-26V36a3.87 3.87 0 0 1 3.84-3.84h7.68a3.87 3.87 0 0 1 3.81 3.84v8.58a34.59 34.59 0 0 1 26 26h8.58a3.87 3.87 0 0 1 3.84 3.84z"
                        FillRule="NonZero" />
                </Path.Data>
            </Path>
        </Canvas>
    </Viewbox>
    <Viewbox x:Key="WorkerIcon" x:Shared="False" Stretch="Uniform">
        <Canvas Width="200" Height="200">
            <Path Fill="#0f2535">
                <Path.Data>
                    <PathGeometry
                        Figures="M170.17 16.15H29.83A3.82 3.82 0 0 0 26 20v116.71a3.82 3.82 0 0 0 3.83 3.82h65.34v15.74a14.92 14.92 0 0 0-9.3 9.3H42a4.83 4.83 0 1 0 0 9.66h43.87a14.92 14.92 0 0 0 28.26 0H158a4.83 4.83 0 1 0 0-9.66h-43.87a14.92 14.92 0 0 0-9.3-9.3v-15.74h65.34a3.82 3.82 0 0 0 3.83-3.82V20a3.82 3.82 0 0 0-3.83-3.85zM94.06 28.08h11.88a8.35 8.35 0 0 1 6.7 3.37l-5 21.51h-15L87 31.89a8.4 8.4 0 0 1 7.06-3.81zm6 98.92a40.74 40.74 0 0 1-40-33.1h80a40.74 40.74 0 0 1-39.95 33.1zm43.4-41.44h-87a6.14 6.14 0 0 1 0-12.28h1.68a41.77 41.77 0 0 1 21.54-36.54l5.74 21.48a4.19 4.19 0 0 0 4 3.09H111a4.18 4.18 0 0 0 4-3.23l5-21.5a41.81 41.81 0 0 1 21.81 36.7h1.67a6.14 6.14 0 1 1 0 12.28z"
                        FillRule="NonZero" />
                </Path.Data>
            </Path>
        </Canvas>
    </Viewbox>
    <Style
        x:Key="LinkButton"
        TargetType="Button">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="Button">
                    <TextBlock
                        TextDecorations="Underline">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Foreground"
            Value="#2f93e0" />
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="#0A67B1" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomMaterialDesignExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" Padding="0,10,0,10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="Center"
                                              Margin="0,0,16,0" />
                            <ToggleButton Grid.Column="1"
                                          VerticalAlignment="Center"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignExpanderToggleButton}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomMaterialDesignExpander" TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="Foreground"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="ExpansionStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" To="Expanded">
                                        <vsm:VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </vsm:VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="PART_Content" To="1"
                                                             Duration="0:0:0.3" />
                                        </Storyboard>
                                    </vsm:VisualTransition>
                                    <vsm:VisualTransition GeneratedDuration="0" To="Collapsed">
                                        <vsm:VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </vsm:VisualTransition.GeneratedEasingFunction>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                                                        Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="PART_Content" To="0"
                                                             Duration="0:0:0.3" />
                                        </Storyboard>
                                    </vsm:VisualTransition>
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_Content" To="1" Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_Content" To="0" Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <DockPanel Background="{TemplateBinding Background}">
                            <ToggleButton Name="HeaderSite"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource CustomMaterialDesignExpanderDownHeaderStyle}"
                                          TextElement.FontSize="15"
                                          Opacity=".87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}" />
                            <Border Name="ContentSite"
                                    DockPanel.Dock="Bottom">
                                <StackPanel Name="ContentPanel"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <StackPanel.Height>
                                        <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualHeight" />
                                            <Binding ElementName="PART_Content" Path="Opacity" />
                                        </MultiBinding>
                                    </StackPanel.Height>
                                    <StackPanel.Width>
                                        <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                            <Binding ElementName="PART_Content" Path="ActualWidth" />
                                            <Binding ElementName="PART_Content" Path="Opacity" />
                                        </MultiBinding>
                                    </StackPanel.Width>
                                    <ContentPresenter Name="PART_Content" Focusable="False"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                                </StackPanel>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right" />
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Horizontal" />
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto" />
                            <Setter Property="Style" TargetName="HeaderSite"
                                    Value="{StaticResource MaterialDesignExpanderRightHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left" />
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Horizontal" />
                            <Setter Property="Height" TargetName="ContentPanel" Value="Auto" />
                            <Setter Property="Style" TargetName="HeaderSite"
                                    Value="{StaticResource MaterialDesignExpanderLeftHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top" />
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical" />
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto" />
                            <Setter Property="Style" TargetName="HeaderSite"
                                    Value="{StaticResource MaterialDesignExpanderUpHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom" />
                            <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical" />
                            <Setter Property="Width" TargetName="ContentPanel" Value="Auto" />
                            <Setter Property="Style" TargetName="HeaderSite"
                                    Value="{StaticResource CustomMaterialDesignExpanderDownHeaderStyle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="CreateATagTemplate">
        <TextBlock VerticalAlignment="Center" Width="Auto">
            "<Run Text="{Binding ElementName=Root, Path=Text}" />" (add new
            <Run Text="{Binding ElementName=Root, Path=TagName}" />)
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="SuggestedTagTemplate">
        <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Width="Auto" />
    </DataTemplate>

    <DataTemplate x:Key="RoleIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="24" Height="24">
                <Path Fill="#333333"
                      Data="M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="EnvironmentIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="200" Height="200">
                <Path Fill="#333333"
                      Data="M14 30v35h172V30zm26 26H23V39h17zM14 83v35h95V83zm26 26H23V92h17zM14 134v35h172v-35zm26 26H23v-17h17z" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="WorkerPoolIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="200" Height="200">
                <Canvas.Resources />
                <Path Fill="#333333"
                      Data="M30.5 13.5v172h35v-172zm26 163h-17v-17h17zM83.5 90.5v95h35v-95zm26 86h-17v-17h17zM134.5 13.5v172h35v-172zm26 163h-17v-17h17z" />
            </Canvas>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="TenantIconDataTemplate">
        <Viewbox Width="13" Height="13" Stretch="Uniform">
            <Canvas Width="24" Height="24">
                <Path Fill="#333333"
                      Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z" />
            </Canvas>
        </Viewbox>
    </DataTemplate>


</ResourceDictionary>